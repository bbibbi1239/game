객체지향 발표

먼저 , 게임 개요 입니다. 저희 게임의 제목은 growing snake입니다. 뱀이 과일을 먹고 자라나는 게임이어서 직관적으로 제목을 지었습니다. 
디자인 또한 직관적으로 도형으로 표현하여 접근하기 쉽고, 간단하게 즐기는 게임을 만들었습니다. 
스토리는 성장기인 아기뱀이 성체를 목표로 커가는 스토리입니다.

게임 플레이 방법입니다. 
규칙을 먼저 소개해드리자면, 뱀이 과일을 먹으면 몸이 한칸 씩 자라납니다. 몸의 크기가 10이 되면 게임을 클리어합니다. 하지만 그 전에 벽에 닿거나, 자신의 몸에 닿으면 게임이 끝이 납니다.
조작법은 방향키로 움직이시면 됩니다.

코드를 설명하기에 앞서 이해를 돕기 위해 출력화면을 먼저 보시겠습니다.

게임 코드입니다.
main() 
→ snakegame생성자 단계
자식 클래스가 생성될 때 부모 클래스는 공통 속성과 메소드를 정의하여 자식 클래스가 이를 상속받아 사용할 수 있도록 합니다.
(RenderWindow() 생성: 게임 창 생성)

SnakeGame game;: SnakeGame 클래스의 인스턴스를 생성. 
(initialize() 함수가 호출:뱀과 과일이 초기화 
spawnFruit() : 호출)

spawnFruit() :과일의 랜덤 위치 생성하는 함수

Clock clock;: SFML의 Clock 객체를 생성하여 게임의 프레임 간 시간을 측정. 이것은 게임의 속도를 일정하게 조절

게임 루프 시작
while (game.getWindow().isOpen() && !game.isGameOver()) {
사용자가 게임을 종료하지 않고, 게임이 끝나지 않는 한 계속해서 루프를 반복합니다.

이벤트 처리
Event event;: 사용자 입력이나 시스템 이벤트를 처리하기 위한 이벤트 객체를 생성합니다. pollEvent(event): 객체에서 일어나는 사건을 확인하는 거예요. 조작키를 누르면 이 객체에 그 정보가 들어가요.
만약 사용자가 창을 닫으려고 하면(Event::Closed), 게임 창이 닫히도록 설정합니다.

사용자 입력 및 게임 로직 처리
game.input();: 사용자의 키 입력을 처리하여 뱀의 방향을 바꾸거나 게임 종료를 설정합니다. 
game.logic();: 뱀의 움직임, 과일 먹기, 충돌 체크 등 게임의 논리를 업데이트합니다.
game.render();: 현재 상태에 따라 화면을 그립니다. 벽, 뱀, 과일 등을 화면에 표시합니다.

input() : 조작 방향키 설정, 게임종료 키 설정합니다. X를 누르면 종료됩니다.
logic (): 입력된 머리 방향에 따라 머리가 이동하게 합니다. -> 뱀 몸통이 앞을 따라 이동하게 합니다 -> 과일을 먹으면 점수와 몸통의 길이가 늘어나게 합니다.

logic() : 뱀이 벽에 닿거나 뱀 자신의 몸에 닿았는지 find함수를 사용하여 인식합니다. 닿았다면 점수와 게임오버 메세지를 출력합니다.-> 만약 뱀의 몸 길이가 10이 되면 점수와 게임 클리어를 출력합니다.

render() : getWindow().clear(): 화면을 검은색으로 지웁니다.  ->  for구문을 활용하여 벽을 나타내는 사각형을 형성하고 위치를 설정하고 getWindow().draw()를 활용해 게임 윗벽을 그립니다.  ->  나머지 벽 나타내기
render() : 뱀 몸통 부분을 그립니다. -> 과일 모양이 뱀의 위치와 겹치지 않게 랜덤하게 생성하고 그립니다. -> getWindow().display(): 화면에 모든 내용 표시하기

프레임 간 시간 측정 및 대기
Time elapsed = clock.restart();: 마지막 프레임이 소요된 시간을 측정하고, 클락을 재시작합니다.
sleep(milliseconds(200) - elapsed);: 다음 프레임까지 대기하는 코드입니다.기본적으로 200ms 대기하지만, 이미 소요된 시간(elapsed)만큼 줄여서 대기합니다. 
이렇게 하면 게임 속도를 일정하게 유지할 수 있습니다.
프로그램 종료
return 0;

게임 엔딩 : 게임엔딩은 2가지가 출력됩니다. 점수와 엔딩 코멘트입니다. 저희 게임은 clear와 over 2가지 엔딩으로 clear를 하면 점수와 성체가 되었다!! 라는 코멘트가 뜨고, over라면 점수와 살아남기 힘들다,,, 코멘트가 뜹니다.

팀원 역할 : 저희 팀은 원희가 기획과 코드 프로그래밍을 하고, 제가 sfml추가와 수정, 발표를 맡았습니다.

느낌점: 프로젝트를 만들면서 수업시간에 배운 것들을 응용하다보니 다시한번 복습을 하는 느낌이어서 게임을 이해하기 수월했습니다. 콘솔창 말고 window창에 따로 게임이 실행되는 것은 터음이어서 신기하고 재밌게 진행을 하였습니다.